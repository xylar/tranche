name: Publish Python 🐍 distribution 📦 to PyPI and (optionally) TestPyPI
# Based on https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

on:
  push:
    branches: [ main ]
    # Any semantic-version tag like 0.2.1 or 1.0.0rc1 will trigger
    tags: [ '*' ]
  workflow_dispatch:

# Default minimal permissions; jobs escalate only what they need
permissions:
  contents: read

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & test 📦
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install build & dev deps
        run: |
          python -m pip install --upgrade pip
          # Install project in editable mode with dev extras (includes build, pytest, twine, etc.)
          python -m pip install -e .[dev]
      - name: Run tests (tags only)
        if: startsWith(github.ref, 'refs/tags/')
        run: pytest -q
      - name: Build sdist and wheel
        run: python -m build
      - name: Check distribution metadata
        run: twine check dist/*
      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7

  publish-to-testpypi:
    name: Publish to TestPyPI
    # Only publish to TestPyPI for pushes to main (not for pull requests / tags directly)
    if: github.ref == 'refs/heads/main'
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/tranche
    permissions:
      id-token: write  # for OIDC trusted publishing
      contents: read
    steps:
      - name: Checkout (for version introspection)
        uses: actions/checkout@v4
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Set up Python (for optional version check/debug)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    # Run on any tag (semantic versions used directly, no leading 'v')
    if: startsWith(github.ref, 'refs/tags/')
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/tranche
    permissions:
      id-token: write  # for OIDC trusted publishing
      contents: read
    steps:
      - name: Checkout (for version verification)
        uses: actions/checkout@v4
      - name: Download distributions
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Set up Python (for version verification)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Verify tag matches version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          FILE_VERSION=$(python -c "import tranche.version as v; print(v.__version__)")
          if [ "$TAG_VERSION" != "$FILE_VERSION" ]; then
            echo "Tag version ($TAG_VERSION) != package version ($FILE_VERSION)" >&2
            exit 1
          fi
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
